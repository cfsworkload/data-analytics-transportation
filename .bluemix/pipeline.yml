---
stages:
- name: Cloud Foundry Build
  inputs:
  - type: git
    branch: master
  triggers:
  - type: commit
  jobs:
  - name: Build
    type: builder
    artifact_dir: ''
- name: Cloud Foundry Deploy
  inputs:
  - type: job
    stage: Cloud Foundry Build
    job: Build
  triggers:
  - type: stage
    enabled: false
  properties:
  - name: mapquestKey
    value: 'REPLACE_WITH_MAPQUEST_KEY'
    type: text
  jobs:
  - name: Deploy to production
    type: deployer
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}
    script: "#!/bin/bash\ncf create-service cloudantNoSQLDB Free DAT-cloudant\n\
      sed -i \"s/PUT_KEY_HERE/${mapquestKey}/g\" ${WORKSPACE}/public/freeboard/index2.html\n\
      sed -i \"s/PUT_KEY_HERE/${mapquestKey}/g\" ${WORKSPACE}/public/freeboard/js/openMap.js\n\
      cf create-service spark ibm.SparkService.PayGoPersonal DAT-spark\n\
      cf create-service Object-Storage Free DAT-objectstorage \n\
      cf create-service messagehub standard \"Message Hub-e2\"\ncf push \"${CF_APP}\"\
      \ --no-start\ncf bind-service \"${CF_APP}\" DAT-cloudant\ncf bind-service \"\
      ${CF_APP}\" DAT-spark\ncf bind-service \"${CF_APP}\" DAT-objectstorage\ncf bind-service \"${CF_APP}\" \"Message Hub-e2\"\ncf start\
      \ \"${CF_APP}\""
- name: Bridge Deploy
  inputs:
  - type: git
    branch: master
  triggers:
  - type: stage
  properties:
  - name: msghubUser
    value: ''
    type: text
  - name: msghubPassword
    value: ''
    type: text
  - name: tenant
    value: ''
    type: text
  - name: username
    value: ''
    type: text
  - name: password
    value: ''
    type: text
  jobs:
  - name: Get object storage & message hub credentials
    type: deployer
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}
    script: |
      #!/bin/bash
      output=`cf env ${CF_APP} | grep projectId | awk '{print $2}'`
      export tenant=${output:1:${#output}-3}
      output=`cf env ${CF_APP} | grep password -m 1 | awk '{print $2}'`
      export password=${output:1:${#output}-3}
      output=`cf env ${CF_APP} | grep userId -m 1 | awk '{print $2}'`
      export username=${output:1:${#output}-3}
      output=`cf env ${CF_APP} | grep password  | awk 'NR == 3' |  awk '{print $2}'`
      export msghubPassword=${output:1:${#output}-3}
      output=`cf env ${CF_APP} | grep -w user -m 1 |  awk '{print $2}'`
      export msghubUser=${output:1:${#output}-2}
  - name: Bridge Deploy
    type: deployer
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}
    script: |
      #!/bin/bash
      output=`cf env ${CF_APP} | grep projectId | awk '{print $2}'`
      export tenant=${output:1:${#output}-3}
      output=`cf env ${CF_APP} | grep password -m 1 | awk '{print $2}'`
      export password=${output:1:${#output}-3}
      output=`cf env ${CF_APP} | grep userId -m 1 | awk '{print $2}'`
      export username=${output:1:${#output}-3}
      output=`cf env ${CF_APP} | grep password  | awk 'NR == 3' |  awk '{print $2}'`
      export msghubPassword=${output:1:${#output}-3}
      output=`cf env ${CF_APP} | grep -w user -m 1 |  awk '{print $2}'`
      export msghubUser=${output:1:${#output}-2}
